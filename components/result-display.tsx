"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Card } from "@/components/ui/card"
import { Download, Share2, Check, AlertTriangle } from "lucide-react"
import { useToast } from "@/components/ui/use-toast"

interface ResultDisplayProps {
  resultImage: string
  textureName: string
  textureQuote: string
  isSimulated?: boolean
}

export default function ResultDisplay({
  resultImage,
  textureName,
  textureQuote,
  isSimulated = false,
}: ResultDisplayProps) {
  const [showShareOptions, setShowShareOptions] = useState(false)
  const [showBeforeAfter, setShowBeforeAfter] = useState(false)
  const { toast } = useToast()

  const handleDownload = () => {
    try {
      const link = document.createElement("a")
      link.href = resultImage
      link.download = `casla-quartz-${textureName.toLowerCase().replace(/\s+/g, "-")}.png`
      document.body.appendChild(link)
      link.click()
      document.body.removeChild(link)

      toast({
        title: "T·∫£i xu·ªëng th√†nh c√¥ng",
        description: "H√¨nh ·∫£nh ƒë√£ ƒë∆∞·ª£c t·∫£i xu·ªëng th√†nh c√¥ng",
      })
    } catch (error) {
      toast({
        title: "L·ªói t·∫£i xu·ªëng",
        description: "Kh√¥ng th·ªÉ t·∫£i xu·ªëng h√¨nh ·∫£nh",
        variant: "destructive",
      })
    }
  }

  const handleShare = () => {
    setShowShareOptions(!showShareOptions)
  }

  const handleCopyLink = () => {
    try {
      navigator.clipboard.writeText(resultImage)
      toast({
        title: "ƒê√£ sao ch√©p",
        description: "ƒê∆∞·ªùng d·∫´n h√¨nh ·∫£nh ƒë√£ ƒë∆∞·ª£c sao ch√©p v√†o clipboard",
        action: <Check className="h-4 w-4 text-green-500" />,
      })
    } catch (error) {
      toast({
        title: "L·ªói sao ch√©p",
        description: "Kh√¥ng th·ªÉ sao ch√©p ƒë∆∞·ªùng d·∫´n",
        variant: "destructive",
      })
    }
  }

  return (
    <div className="space-y-4 sm:space-y-6">
      <div className="text-center">
        <h2 className="text-xl sm:text-2xl font-bold text-gray-900 mb-1 sm:mb-2">K·∫øt qu·∫£</h2>
        <p className="text-xs sm:text-sm text-gray-600">
          H√¨nh ·∫£nh c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω th√†nh c√¥ng v·ªõi k·∫øt c·∫•u {textureName}!
        </p>
      </div>

      {isSimulated && (
        <div className="p-3 sm:p-4 bg-yellow-50 rounded-lg border border-yellow-200 flex items-start gap-2">
          <AlertTriangle className="h-5 w-5 text-yellow-500 flex-shrink-0 mt-0.5" />
          <p className="text-xs sm:text-sm text-yellow-700">
            K·∫øt qu·∫£ n√†y ƒë∆∞·ª£c t·∫°o b·∫±ng ch·∫ø ƒë·ªô m√¥ ph·ªèng do kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß Tensor Art. Ch·∫•t l∆∞·ª£ng c√≥ th·ªÉ
            kh√¥ng t·ªët nh∆∞ khi s·ª≠ d·ª•ng API x·ª≠ l√Ω h√¨nh ·∫£nh AI.
          </p>
        </div>
      )}

      <Card className="overflow-hidden border-gray-200">
        <div className="aspect-video bg-gray-100 flex items-center justify-center">
          <img src={resultImage || "/placeholder.svg"} alt="K·∫øt qu·∫£" className="max-h-full max-w-full object-contain" />
        </div>
      </Card>

      <div className="p-3 sm:p-4 bg-blue-50 rounded-lg border border-blue-100">
        <h3 className="text-sm sm:text-base font-medium text-blue-900 mb-1 sm:mb-2">Th√¥ng tin v·ªÅ k·∫øt c·∫•u ƒë√£ ch·ªçn</h3>
        <p className="text-xs sm:text-sm text-blue-800">{textureQuote}</p>
      </div>

      <div className="flex flex-col sm:flex-row gap-3 sm:gap-4 justify-center">
        <Button onClick={handleDownload} className="bg-blue-900 hover:bg-blue-800 text-xs sm:text-sm">
          <Download className="mr-1 sm:mr-2 h-3 w-3 sm:h-4 sm:w-4" />
          <span className="hidden sm:inline">T·∫£i xu·ªëng h√¨nh ·∫£nh ch·∫•t l∆∞·ª£ng cao</span>
          <span className="sm:hidden">T·∫£i xu·ªëng</span>
        </Button>

        <Button variant="outline" onClick={handleShare} className="text-xs sm:text-sm">
          <Share2 className="mr-1 sm:mr-2 h-3 w-3 sm:h-4 sm:w-4" />
          Chia s·∫ª
        </Button>
      </div>

      {showShareOptions && (
        <Card className="p-3 sm:p-4 border-gray-200">
          <h3 className="text-sm sm:text-base font-medium text-gray-900 mb-2 sm:mb-3">Chia s·∫ª k·∫øt qu·∫£</h3>
          <div className="grid grid-cols-3 gap-2 sm:gap-4">
            <Button variant="outline" className="flex flex-col items-center h-auto py-2 sm:py-3 text-xs sm:text-sm">
              <div className="w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-blue-100 flex items-center justify-center mb-1 sm:mb-2">
                <span className="text-blue-900 font-bold">f</span>
              </div>
              <span>Facebook</span>
            </Button>

            <Button variant="outline" className="flex flex-col items-center h-auto py-2 sm:py-3 text-xs sm:text-sm">
              <div className="w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-blue-100 flex items-center justify-center mb-1 sm:mb-2">
                <span className="text-blue-900 font-bold">in</span>
              </div>
              <span>LinkedIn</span>
            </Button>

            <Button
              variant="outline"
              className="flex flex-col items-center h-auto py-2 sm:py-3 text-xs sm:text-sm"
              onClick={handleCopyLink}
            >
              <div className="w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-blue-100 flex items-center justify-center mb-1 sm:mb-2">
                <span className="text-blue-900 font-bold">üîó</span>
              </div>
              <span>Sao ch√©p</span>
            </Button>
          </div>
        </Card>
      )}

      <div className="bg-gray-50 p-3 sm:p-6 rounded-lg border border-gray-200">
        <h3 className="text-base sm:text-lg font-bold text-gray-900 mb-2 sm:mb-4">B·∫°n c√≥ th√≠ch k·∫øt qu·∫£ kh√¥ng?</h3>
        <p className="text-xs sm:text-sm text-gray-600 mb-3 sm:mb-4">
          H√£y li√™n h·ªá v·ªõi ch√∫ng t√¥i ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n v·ªÅ c√°c s·∫£n ph·∫©m ƒë√° th·∫°ch anh CaslaQuartz ph√π h·ª£p v·ªõi kh√¥ng gian c·ªßa
          b·∫°n. Ch√∫ng t√¥i cung c·∫•p d·ªãch v·ª• t∆∞ v·∫•n mi·ªÖn ph√≠ v√† b√°o gi√° chi ti·∫øt.
        </p>
        <div className="flex flex-col sm:flex-row gap-2 sm:gap-3">
          <Button className="bg-blue-900 hover:bg-blue-800 text-xs sm:text-sm">Li√™n h·ªá t∆∞ v·∫•n</Button>
          <Button variant="outline" className="text-xs sm:text-sm">
            Xem th√™m m·∫´u ƒë√° th·∫°ch anh CaslaQuartz
          </Button>
        </div>
      </div>
    </div>
  )
}

